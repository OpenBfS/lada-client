Lada-Client
===========
Dies ist die Prototypversion eines EXTJS basierten Klienten für die
Verarbeitung von Labordaten (Lada) zur Überwachung der Umweltradioaktivität.

Die Software bietet grundlegende Funktionalität zur Erfassung und Bearbeitung
von Messdaten. Weitere Informationen finden sich auf der Projektwebseite unter
der Adresse:

	https://wald.intevation.org/projects/lada/

Die Software entstand im Rahmen einer Software Entwicklung durch die
Intevation GmbH im Auftrag des Bundesamt für Strahlenschutz im Jahre 2013.

Kontakt
-------
Bundesamt für Strahlenschutz
SW2 Notfallschutz, Zentralstelle des Bundes (ZdB)
Willy-Brandt-Strasse 5
38226 Salzgitter
info@bfs.de

Lizenz
------
Die Software unter der GNU GPL v>=3 Lizenz verfügbar. Details siehe die Datei
COPYING.

Quelltext
---------
Die Quelldateien lassen sich wie folgt auschecken:
hg clone https://scm.wald.intevation.org/hg/lada/lada-client

Dokumentation
-------------
Die Dokumentation wird mit dem Tool JSDuck erzeugt.
Im Wurzelordner lässt sich nach der Installation von JSDuck dann mit dem
Befehl "jsduck" die Dokumentation für den Lada-Clienten erzeugen.
Die Dokumentation findet sich nach der Generierung in dem Order "doc".
Einstiegseite ist die Seite template.html.

JSDuck ist unter der Adresse

https://github.com/senchalabs/jsduck

zu finden und muss installiert werden.

Einstellung bezüglich der Generierung der Dokumentation ist in der Datei
jsduck.json hinterlegt.

Entwicklung
-----------
Für die Entwicklung ist es notwenig in dem Wurzelordner die ExtJS-Bibliothek
in der Version >=4.2.0 unter dem Namen "extjs" zur Verfügung zu stellen.

Diese lässt sich unter der folgenden URL herunterladen:
http://cdn.sencha.com/ext/gpl/ext-4.2.0-gpl.zip

SHA1 Checksum: 2ce990d9e90c48a76078e8533c72b5452f9ed809

Beispiel:
curl -O http://cdn.sencha.com/ext/gpl/ext-4.2.0-gpl.zip
unzip ext-4.2.0-gpl.zip
ln -s ext-4.2.0-gpl extjs

Zusätzlich wird für diese Anwendung eine Bibliothek zur Internationalisierung
verwendet, die unter der URL

https://github.com/elmasse/Ext.i18n.Bundle

verfügbar ist, verwendet.
Diese muss in dem Ordner 'src' der vorher zur Verfügung gestellten ExtJS
Bibliothek eingebunden werden. Dazu wird der Ordner 'i18n' in den Ordner 'src' kopiert
oder verlinkt.

Build
-----
Die Anwendung wird mit Hilfe des von Sencha bereitgestellten Tools 'Sencha Cmd'
compiliert und minifiziert. Vorbedingung für den Compilevorgang ist die unter
Entwicklung beschriebene Verzeichnisstruktur.

Sencha Cmd kann unter der URL

http://www.sencha.com/products/sencha-cmd/download

heruntergeladen und dann installiert werden.

Mit dem folgenden Befehl kann dann der Lada-Client compiliert und minifiziert werden:

sencha -sdk /path/to/extjs compile \
       -classpath=app,app/view/widgets/resources/datetime page -yui \
       -in index.html -out build/index.html

Dies erzeugt in dem Ordner 'build' die minifizierte Version der Anwendung, die
alle benötigten Klassen der ExtJS Bibliothek beinhaltet und eine entsprechende
index.html, die zur Auslieferung in einem Webserver verwendet werden kann.

Installation
------------
Für Informationen zur Installation schauen Sie in die INSTALL Datei.
